########################################
# qfloptool Linux Github Action        #
########################################

name: Linux

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    strategy:
      fail-fast: false
      matrix:
        cxx: [clang++, g++-10]
        build_type: [Debug, Release]
        qt: [6.2.1, 6.4.0]
    runs-on: ubuntu-latest
    steps:

    # Checks out your repository under $GITHUB_WORKSPACE, so your job can access it
    - name: Checkout Repository
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    # Install Qt
    - name: Install Qt
      uses: jurplel/install-qt-action@v2
      with:
        version: ${{ matrix.qt }}
        modules: 'qt5compat'
        dir: ${{ github.workspace }}

    # Install OpenGL
    - name: Install OpenGL
      uses: openrndr/setup-opengl@v1.1

    # Install Packages
    - name: Install Packages
      run: |
        sudo apt update
        sudo apt install -y freeglut3-dev libalut-dev libasound2-dev libc6-dev libgl1-mesa-dev libglu1-mesa-dev llvm-7.0 libxcursor-dev libxi-dev libxinerama-dev libxrandr-dev libxxf86vm-dev mesa-utils pkg-config xorg-dev xvfb

    # Cache Dependencies
    - name: Cache Dependencies
      id: cache-deps
      uses: actions/cache@v3
      env:
        cache-name: cache-deps-linux
      with:
        path: deps
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ matrix.build_type }}-${{ hashFiles('.github/workflows/linux.yml')}}

    # Retrieve Submodules
    - name: Retrieve Submodules
      if: steps.cache-deps-linux.outputs.cache-hit != 'true'
      run: |
        git submodule update --init --recursive deps

    # Build qfloptool
    - name: Build qfloptool
      run: |
        cmake . -D CMAKE_CXX_COMPILER=${{ matrix.cxx }} -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
        make -j 8
        strip ./qfloptool

